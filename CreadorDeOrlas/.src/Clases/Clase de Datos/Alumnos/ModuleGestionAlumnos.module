' Gambas module file

Public lista As New ClassListaAlumnos
Public ListaOrdenada As New Integer[]

Public rutaFicheroDatos As String 

Public guardado As Boolean 

Public rutasTemporales As New String[] 

Public Sub CrearGrupo(ruta As Action) As Boolean
  
  Dim a As Integer
  'borrado de rutas donde se guardan los temporales
  For a = 0 To rutasTemporales.count - 1
    ModuleUtilidadesDisco.vaciarDirectorio(rutasTemporales[a], "*.*") 
  Next
  
  'limpio lista
  lista.registros.clear()
  rutaFicheroDatos = ruta
  guardado = False
  
  Return True
  
End

Public Sub anadirRegistro(registro As ClassPersona)
  
  registro.id = lista.generarid()
  lista.registros.add(registro)
  guardado = False
  
End

Public Sub EditarRegistros(reg As ClassAlumno, indice As Integer)
  
  Dim listaArrayReg As New ClassAlumno[]
  
  reg.id = indice
  
  listaArrayReg.Add(reg)
  lista.Registros.Delete(indice)
  lista.Registros.Insert(listaArrayReg, indice)
  
End

Public Sub BorrarRegistro(indice As Integer)
  
  lista.registros.Delete(indice)
  guardado = False
  
End

'---------------------------------------------
'Carga de datos desde el fichero "datos"
'---------------------------------------------

Public Sub CargarDatos(rutaLecturaFichero As String) As Boolean
  
  'rutaLecturaFichero=ModulePrincipal.rutaprograma & "temporales/datosDimplomasTematicos.txt"
  
  Dim contenido As String
  Dim cadenas As New String[]
  
  contenido = file.Load(rutaLecturaFichero)
  cadenas = Split(contenido, "\n")
  
  If cadenas[0] = "version 1" Then
    cadenas.Delete(0) 'borro la primera linea,que solo me sirve para averiguar la version
    Return lista.LecturaDatos(cadenas)
    
  Else
    Message.Error("El fichero no lo puedo leer.\n Versi√≥n Desconocida.")
    Return False
  Endif
  
End

Public Sub Ordenar(tipo As String, Optional modo As Integer) As Integer[] '' tipo="apellidos" Ordena por apellidos + nombre, sino por el campo orden
  
  Dim contenido As String
  Dim listaOrdenada As New Integer[]
  Dim ContenidoAOrdenar As New String[]
  Dim separo As New String[]
  Dim a As Integer
  
  'Ordenar alfabeticamente
  If Not modo Then modo = gb.Ascent   
  
  'lista a ordenar
  For a = 0 To lista.Registros.Max
    
    contenido = Upper$(relleno(lista.Registros[a].Apellidos) & relleno(lista.Registros[a].Nombre) & "|" & Str$(a))
    If tipo = "apellidos" Then
      ContenidoAOrdenar.add(contenido)
    Else
      ContenidoAOrdenar.add(Right(String(12, "0") & CString(lista.Registros[a].orden), 12) & contenido)
    Endif
  Next
  
  ContenidoAOrdenar.sort(modo)
  
  For a = 0 To lista.Registros.Max
    separo = Split(contenidoAordenar[a], "|")
    listaOrdenada.Add(Val(separo[1]))
  Next 
  
  Return listaOrdenada
  
End

Private Function relleno(cadena As String) As String
  
  cadena &= "                                                                     "
  cadena = Upper$(Mid$(cadena, 1, 25))
  Return cadena
  
End
