' Gambas class file

Public modo As Integer  'modo añadir=-1, editar=nº de id
Public anadir As Integer = -1
Public reg As New ClassAlumno

Public Sub Form_Open()
  
  Dim numeroorden As Integer
  Dim a As Integer 
  
  If modo > -1 Then   
    If reg.foto <> "" And Exist(modulePrincipal.RutaPrograma & "temporales/FotosAlumnos/" & reg.foto) Then 
      PictureBoxFoto.Tag = Replace$(reg.foto, " ", "_")
      PictureBoxFoto.Picture = Picture.Load(modulePrincipal.RutaPrograma & "temporales/FotosAlumnos/" & reg.foto)
    Else
      If Not Exist(modulePrincipal.RutaPrograma & "temporales/FotosAlumnos/icono_fotos_personas.png") Then 
        Copy "icono_fotos_personas.png" To modulePrincipal.RutaPrograma & "temporales/FotosAlumnos/icono_fotos_personas.png"
      Endif
      PictureBoxFoto.Picture = Picture[modulePrincipal.RutaPrograma & "temporales/FotosAlumnos/icono_fotos_personas.png "]
      PictureBoxFoto.Tag = "icono_fotos_personas.png"
      PictureBoxFoto.Refresh
    Endif
  Else
    Try Copy "icono_fotos_personas.png" To modulePrincipal.RutaPrograma & "temporales/FotosAlumnos/icono_fotos_personas.png"
    PictureBoxFoto.Picture = Picture[modulePrincipal.RutaPrograma & "temporales/FotosAlumnos/icono_fotos_personas.png"]
    PictureBoxFoto.tag = "icono_fotos_personas.png"
  Endif
  
  TextBoxNombre.text = reg.Nombre
  TextBoxApellidos.text = reg.Apellidos
  TextBoxProvincia.text = reg.Provincia
  TextBoxPueblo.text = reg.Pueblo
  
  If modo = -1 Then 
    If reg.orden = 0 Then 
      ValueBoxOrden.value = 1
    Else
      For a = 0 To ModuleGestionAlumnos.Lista.Registros.max
        numeroorden = Max(numeroorden, ModuleGestionProfesores.Lista.Registros[a].Orden)
      Next
      ValueBoxOrden.Value = numeroorden + 1
    Endif
  Else
    ValueBoxOrden.Value = reg.Orden  
  Endif
  
Catch
  ModuleMensajeError.SistemaDescripcionError()
  
End

'----------------------------------------
' Boton Igual
'----------------------------------------

Public Sub ButtonIgualNombre_Click()
  
  Dim maximo As Integer
  Dim valor As Variant
  'se ha producido un click en el grupo de botones iguala
  
  If modo = 0 Then Return 
  
  If ModuleGestionAlumnos.lista.Registros.max = -1 Then 
    Message.Info(("Se trata del primer datos que introduces, no puede igualarlo al anterior"))
    Return
  Endif
  
  If modo = -1 Then
    maximo = ModuleGestionAlumnos.lista.Registros.Max
    If maximo = -1 Then Return
    valor = Object.GetProperty(ModuleGestionAlumnos.Lista.registros[maximo], Last.tag)
  Else
    'estoy editando un registro, me fijo en el registro anterior
    valor = Object.GetProperty(ModuleGestionAlumnos.Lista.registros[modo - 1], Last.tag)
  Endif
  
  'le paso el valor
  Object.SetProperty(reg, Last.tag, valor)  
  '  Print Object.Type(devuelvetextbox(Last.tag))
  
  Object.SetProperty(devuelvetextbox(Last.tag), "text", Object.GetProperty(reg, Last.tag))
  
End

Public Sub devuelvetextbox(texto As String) As Object
  
  Dim propiedades As String[] = ["pueblo", "provincia"]
  
  Select Case propiedades.Find(Lower(texto))
    Case 0
      Return TextBoxPueblo
    Case 1 
      Return TextBoxProvincia
  End Select
  
End

Public Sub ToolButtonAceptar_Click()
  
  reg.Foto = Replace(PictureBoxFoto.tag, " ", "_")
  reg.Nombre = TextBoxNombre.Text
  reg.Apellidos = TextBoxApellidos.Text
  
  reg.Provincia = TextBoxProvincia.text 
  reg.Pueblo = TextBoxPueblo.text 
  reg.Orden = ValueBoxOrden.value 
  
  If modo = anadir Then 
    'si estoy añadiendo paso a añadir datos
    ModuleGestionAlumnos.anadirRegistro(reg)
    FMain.GridViewRegistrosAlumnos.rows.count += 1
    ModuleGestionAlumnos.guardado = False
  Else
    ModuleGestionAlumnos.EditarRegistros(reg, modo)
    ModuleGestionAlumnos.guardado = False
  Endif
  
  Me.Close
  
End

Public Sub ButtonMasUno_Click()
  
  Dim numeroorden As Integer = 0
  Dim a As Integer
  
  If ModuleGestionAlumnos.Lista.Registros.max = -1 Then 
    Return
  Endif
  If modo = 0 Then Return
  
  For a = 0 To ModuleGestionAlumnos.Lista.Registros.max
    numeroorden = Max(numeroorden, ModuleGestionAlumnos.Lista.Registros[a].Orden)
  Next
  reg.Orden = numeroorden + 1
  ValueBoxOrden.Value = reg.Orden
  
End

Public Sub ToolButton1_Click()
  
  Dim comando As String = ModulePrincipal.RutaPrograma & "FotoFotoCarnetMyWebCam.gambas"
  Dim nombrefinal As String
  
  Exec [comando] Wait
  '  User.home & "/webcam_carnet.png"
  nombrefinal = modulePrincipal.RutaPrograma & "temporales/FotosAlumnos/" & Replace(Replace(Replace("webcam_carnet" & Str$(Now()) & ".png", " ", "_"), "/", "-"), ":", "-")
  
  If Exist(User.home & "/webcam_carnet.png") Then 
    Exec ["mv", User.home & "/webcam_carnet.png", nombrefinal] Wait
    
    reg.foto = ModuleIntermedio.extraedesdebarra(nombrefinal)
    PictureBoxFoto.tag = reg.foto
    PictureBoxFoto.picture = Picture[nombrefinal]
  Endif
  
End

Public Sub ToolButtonCancelar_Click()
  
  Me.Close
  
End

Public Sub PictureBoxFoto_MouseDown()
  
  reg.foto = ModuleAsignarYSoltarImagenes.asignaImagen(PictureBoxFoto, modulePrincipal.RutaPrograma & "temporales/FotosAlumnos/")
  PictureBoxFoto.tag = reg.foto
  
End

Public Sub TextBoxNombre_KeyPress()
  
  If Key.code = Key.enter Or Key.Code = Key.Return Then 
    TextBoxApellidos.SetFocus
  Endif
  
End

Public Sub TextBoxApellidos_KeyPress()
  
  If Key.code = Key.enter Or Key.Code = Key.Return Then 
    TextBoxPueblo.SetFocus
  Endif
  
End

Public Sub TextBoxPueblo_KeyPress()
  
  If Key.code = Key.enter Or Key.Code = Key.Return Then 
    TextBoxProvincia.SetFocus
  Endif
  
End

Public Sub ValueBoxOrden_KeyPress()
  
  If Key.code = Key.enter Or Key.Code = Key.Return Then 
    ToolButtonAceptar.SetFocus
  Endif
  
End

Public Sub TextBoxProvincia_KeyPress()
  
  If Key.code = Key.enter Or Key.Code = Key.Return Then 
    ValueBoxOrden.SetFocus
  Endif
  
End

Public Sub ToolButtonAceptar_KeyPress()
  
  If Key.code = Key.enter Or Key.Code = Key.Return Then 
    ToolButtonAceptar_Click()
  Endif
  
End

Public Sub ToolButtonAjustarFoto_Click()
  
  Dim ajusteFoto As New FormExtraerFoto
  
  If reg.foto <> "" Then 
    ajusteFoto.ruta = User.home & "/.CreadorOrlas/temporales/FotosAlumnos/" & reg.foto 
    ajusteFoto.ShowDialog()
    
    PictureBoxFoto.Picture = Picture.Load(User.home & "/.CreadorOrlas/temporales/FotosAlumnos/" & reg.foto)
    PictureBoxFoto.Refresh()
    Try Kill modulePrincipal.RutaPrograma & "temporales/FotosAlumnosMini/" & reg.foto
  Endif
  
End

Public Sub ToolButtonHacerTransparente_Click()
  
  Dim numero As Integer
  Dim ruta As String = User.home & "/.CreadorOrlas/temporales/FotosAlumnos/"
  
  If reg.foto = "" Then 
    Message.Info(("Tienes que elegir alguna foto, antes de intentar convertirla a  fondo transparente"))
  Else
    reg.Foto = ModuleHacerTransparente.convertirTransparente(reg.foto, ruta)
    PictureBoxFoto.tag = reg.foto
    PictureBoxFoto.Picture = Picture.Load(ruta & reg.foto)
  Endif
  
End

Public Sub ToolButtonEditarGimp_Click()
  
  If Exist(User.home & "/.CreadorOrlas/temporales/FotosAlumnos/" & reg.Foto) And reg.foto <> "" Then 
    Exec ["gimp", User.home & "/.CreadorOrlas/temporales/FotosAlumnos/" & reg.Foto] Wait
    
    PictureBoxFoto.Picture = Picture.Load(User.home & "/.CreadorOrlas/temporales/FotosAlumnos/" & reg.Foto)
  Else
    Message.Info(("No se puede editar, debe de asignar una imagen"))
  Endif
  
End
